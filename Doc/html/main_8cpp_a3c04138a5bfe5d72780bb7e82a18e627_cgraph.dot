digraph "main"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="printTipsToRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#ac225f5c6e0e3615f223c552c5501bfa6",tooltip="A handful of tips about the input parameters. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="DataHandler::checkParams\lIfWrong",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler.html#a8dac2873c164d487ab09f7b9f0ee70a8",tooltip="Input params validation method. Does the basic check if the entered parameters are free of total nons..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="DataHandler::inputParams\lToFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler.html#a5a2e314804a1c3550321b9d2974790cb",tooltip="Data harvesting method. Writes all the input params and some run stats to a file. Must be run only on..."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="currentDateTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_data_handler_8cpp.html#aa46369f3c8adbff876c82270346fffa2",tooltip="Data harvesting method. Gets current date/time, format is YYYY-MM-DD.HH:mm:ss. "];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="RandomNumbs::getInstance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_random_numbs.html#a364c415e5105061274013a1e68576a64",tooltip="Core method. Gets the instance of a singleton class. "];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="RandomNumbs::SetSeed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_random_numbs.html#a8d886d9174fe7e5621638941af204ccd",tooltip="Core method. Seeds the PRNG. Remember to call as the first function after initializing this class..."];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Tagging_system::getInstance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tagging__system.html#a80d575a3bbb747f9e1ff71877a937cba",tooltip="Data collecting method. Gets instance of the tagging system. "];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Tagging_system::setValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tagging__system.html#ae2d0666e104e9579931dc61e13fa4888",tooltip="Data collecting method. Sets a new value for the tagging system. "];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="DataHandler::setAllFiles\lAsFirtsTimers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler.html#a049645bbd6069ad5d6a90c8469390811",tooltip="Data harvesting method. Sets status of all data files as \"brand new\". "];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Environment::setHostRandom\lPopulation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#ae6c1788a9b69c76b657d02e38548e5ce",tooltip="Core method. Initializes a vector containing host population. "];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Environment::MMtoPMscaling",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a13b07a4255b87d29541d0f78af6f49f7",tooltip="Core method. When given micro-recombination mutation probability it returns point-mutation probabilit..."];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="DataHandler::saveHostPopul\lToFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler.html#a46129d74eac82af0caae37a9e20e3e2e",tooltip="Data harvesting method. Writes to a file all hosts with their genomes in a human-readable format..."];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Environment::getHostsPopSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a09b16d159ccf1ff7210c339e7c2b9408",tooltip="Core method. Gets the host population size. "];
  Node13 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Environment::getHostGenes\lToString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a71dc8a1828a2830ffefa901d0974b2c1",tooltip="Data harvesting method. Gets the genome of selected host in human-readable format. "];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="DataHandler::saveHostGenetic\lDivers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler.html#a23ad0de50b3da065674e92b150e12d9f",tooltip="Data harvesting method. Calculates and writes to a file some stats about the hosts population genetic..."];
  Node16 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Environment::getHostFitness",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#ab70e6fda860c35a3ac222cfdef2dff44"];
  Node16 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Environment::getSingleHost\lChromoOneSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a7d23e5f51b1c1feed367da44852b2dba"];
  Node16 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Environment::getSingleHost\lRealGeneOne",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a86d8f067f5576f39047e360dd717b1fe"];
  Node16 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Environment::getSingleHost\lChromoTwoSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#ac98907c5bc18780a611a743fb4afa479"];
  Node16 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Environment::getSingleHost\lRealGeneTwo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a20b1bdddb432ef84ee08fd1cd77d5fd9"];
  Node16 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="getShannonIndx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_data_handler_8cpp.html#a83136cc074426bc3310d6e855252beff",tooltip="Data harvesting method. Calculates some stats of population genetics: Shannon&#39;s index, number of MHC/antigen types, total number of MHC copies. Runs internally within DataHarvester class. "];
  Node1 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="DataHandler::saveHostGene\lNumbers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler.html#a5661a45f0a9965bcd041c5617f1a1e8b",tooltip="Data harvesting method. Record the total number of genes and types of MHCs in hosts. All the freaking hosts! "];
  Node23 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Environment::matingWithNo\lCommonMHCsmallSubset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#a2950984f7e5ec70149e0b27dce45a8b1"];
  Node24 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Environment::mutateHosts\lWithDelDupl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#af7fc9c6750f847a8260df37927646583",tooltip="Core method. Iterates through the all genes of the host population and performs mutations in genes wi..."];
  Node1 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Environment::clearHostInfectionsData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_environment.html#adff3e1c9799ef7a3bc8d7b988bda3381",tooltip=". Core method. Clears information about infection and fitness in the whole host population. "];
}
